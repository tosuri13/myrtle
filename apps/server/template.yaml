AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"

Parameters:
  UserPoolId:
    Type: String

Resources:
  MyrtleUsersTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
      BillingMode: "PAY_PER_REQUEST"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
      TableName: "myrtle-users-table"

  MyrtleLamentsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: "userId"
          AttributeType: "S"
        - AttributeName: "lamentId"
          AttributeType: "S"
      BillingMode: "PAY_PER_REQUEST"
      KeySchema:
        - AttributeName: "userId"
          KeyType: "HASH"
        - AttributeName: "lamentId"
          KeyType: "RANGE"
      TableName: "myrtle-laments-table"

  MyrtleServerApi:
    Type: "AWS::Serverless::Api"
    Properties:
      Auth:
        AddDefaultAuthorizerToCorsPreflight: false
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}"
        DefaultAuthorizer: CognitoAuthorizer
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Authorization,Content-Type'"
        AllowMethods: "'OPTIONS,GET,POST,PUT,DELETE'"
      Name: "myrtle-server-api"
      OpenApiVersion: 3.0.0
      StageName: "v1"

  MyrtleServerApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: "."
      Events:
        RootPath:
          Type: "Api"
          Properties:
            Path: "/"
            Method: "ANY"
            RestApiId: !Ref MyrtleServerApi
        AnyPath:
          Type: "Api"
          Properties:
            Path: "/{proxy+}"
            Method: "ANY"
            RestApiId: !Ref MyrtleServerApi
      FunctionName: "myrtle-server-api-function"
      Handler: "index.handler"
      MemorySize: 512
      Role: !GetAtt MyrtleServerFunctionRole.Arn
      Runtime: "nodejs20.x"
    Metadata:
      BuildMethod: "makefile"

  MyrtleServerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "myrtle-server-function-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - "dynamodb:DeleteItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                  - "dynamodb:UpdateItem"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
      RoleName: "myrtle-server-function-role"
